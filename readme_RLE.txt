Этот JavaScript-код реализует алгоритм сжатия данных Run-Length Encoding (RLE) для текстовых файлов. Он также предоставляет возможность декодирования сжатых данных обратно в исходный текст.

Повторяющиеся символы в тексте сжимаются путем добавления специального символа #, за которым следует число повторений в ASCII(до 255 символов, но если число повторений кратно больше, то кодирование на тот же символ произойдет повторно) и сам символ.
"е" повторённое 65 раз в тексте закодируется, как: #Ае.

Каждую # будем кодировать отдельно в независимости от количества, так как в кодировании решётка служит специальным символом.

Постановка задачи:
В текстовом файле input.txt записана строка, которую нужно закодировать согласно алгоритму RLE, закодированную строку сохраняем в файл code.txt. После этого мы читаем данные из файла code.txt и выполняем декодировку согласно тому же алгоритму и сохраняем результат в decode.txt. Очевидно, что строки в файлах input.txt и decode.txt должны совпадать.
В конце обязательно подсчитываем коэффициент сжатия файла при помощи алгоритма RLE, то есть поделим длинну строки input.txt на code.txt, из чего узнаем во сколько раз сократился наш файл при кодировании.

